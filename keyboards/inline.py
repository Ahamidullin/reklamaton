from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

def main_menu():
    buttons = [
        [InlineKeyboardButton(text="üé≠ –í—ã–±—Ä–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="select_character")],
        [InlineKeyboardButton(text="‚ú® –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ", callback_data="create_character")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def character_list_keyboard(characters):
    buttons = []
    for char in characters:
        button = [InlineKeyboardButton(text=char.name, callback_data=f"character_{char.id}")]
        buttons.append(button)
    
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard

def character_card_keyboard(character_id):
    buttons = [
        [InlineKeyboardButton(text="‚úÖ –ù–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥", callback_data=f"start_dialogue_{character_id}")],
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_character_{character_id}")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data="select_character")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 

def creation_method_keyboard():
    buttons = [
        [InlineKeyboardButton(text="üìù –ó–∞–¥–∞—Ç—å –ø—Ä–æ–º–ø—Ç–æ–º", callback_data="creation_prompt")],
        [InlineKeyboardButton(text="üõ†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä", callback_data="creation_constructor")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 

def skip_keyboard(callback_data: str):
    buttons = [
        [InlineKeyboardButton(text="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=callback_data)]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 

def preview_keyboard():
    buttons = [
        [InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –Ω–∞—á–∞—Ç—å —á–∞—Ç", callback_data="save_character")],
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_character")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 

def archetype_group_keyboard():
    buttons = [
        [InlineKeyboardButton(text="–ê–Ω–∞–ª–∏—Ç–∏–∫–∏ (INTJ, INTP, ENTJ, ENTP)", callback_data="archetype_group_analysts")],
        [InlineKeyboardButton(text="–î–∏–ø–ª–æ–º–∞—Ç—ã (INFJ, INFP, ENFJ, ENFP)", callback_data="archetype_group_diplomats")],
        [InlineKeyboardButton(text="–°—Ç—Ä–∞–∂–∏ (ISTJ, ISFJ, ESTJ, ESFJ)", callback_data="archetype_group_sentinels")],
        [InlineKeyboardButton(text="–ò—Å–∫–∞—Ç–µ–ª–∏ (ISTP, ISFP, ESTP, ESFP)", callback_data="archetype_group_explorers")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="create_character")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 

def archetype_type_keyboard(types):
    buttons = []
    row = []
    for mbti_type in types:
        row.append(InlineKeyboardButton(text=mbti_type, callback_data=f"archetype_type_{mbti_type}"))
        if len(row) == 2:
            buttons.append(row)
            row = []
    if row:
        buttons.append(row)
    
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="creation_constructor")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 

def communication_style_keyboard():
    buttons = [
        [
            InlineKeyboardButton(text="–§–æ—Ä–º–∞–ª—å–Ω—ã–π", callback_data="comm_style_formal"),
            InlineKeyboardButton(text="–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π", callback_data="comm_style_literary")
        ],
        [
            InlineKeyboardButton(text="–ù–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π", callback_data="comm_style_informal"),
            InlineKeyboardButton(text="–°–ª–µ–Ω–≥ (Gen Z)", callback_data="comm_style_gen_z")
        ],
        [
            InlineKeyboardButton(text="–°–∫–≤–µ—Ä–Ω–æ—Å–ª–æ–≤–∏–µ", callback_data="comm_style_profanity"),
            InlineKeyboardButton(text="–î–µ—Ç—Å–∫–∏–π –ª–µ–ø–µ—Ç", callback_data="comm_style_baby_talk")
        ],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="creation_constructor")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 

def traits_keyboard(sarcasm=1, humor=1, flirt=1, unpredictability=1, black_humor=False):
    buttons = [
        [
            InlineKeyboardButton(text="–°–∞—Ä–∫–∞–∑–º:", callback_data="noop"),
            InlineKeyboardButton(text="-", callback_data="trait_decr_sarcasm"),
            InlineKeyboardButton(text=str(sarcasm), callback_data="noop"),
            InlineKeyboardButton(text="+", callback_data="trait_incr_sarcasm")
        ],
        [
            InlineKeyboardButton(text="–Æ–º–æ—Ä:", callback_data="noop"),
            InlineKeyboardButton(text="-", callback_data="trait_decr_humor"),
            InlineKeyboardButton(text=str(humor), callback_data="noop"),
            InlineKeyboardButton(text="+", callback_data="trait_incr_humor")
        ],
        [
            InlineKeyboardButton(text="–§–ª–∏—Ä—Ç:", callback_data="noop"),
            InlineKeyboardButton(text="-", callback_data="trait_decr_flirt"),
            InlineKeyboardButton(text=str(flirt), callback_data="noop"),
            InlineKeyboardButton(text="+", callback_data="trait_incr_flirt")
        ],
        [
            InlineKeyboardButton(text="–ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å:", callback_data="noop"),
            InlineKeyboardButton(text="-", callback_data="trait_decr_unpredictability"),
            InlineKeyboardButton(text=str(unpredictability), callback_data="noop"),
            InlineKeyboardButton(text="+", callback_data="trait_incr_unpredictability")
        ],
        [
            InlineKeyboardButton(text="–ß–µ—Ä–Ω—ã–π —é–º–æ—Ä:", callback_data="noop"),
            InlineKeyboardButton(text="‚úÖ –î–∞" if black_humor else "‚ùå –ù–µ—Ç", callback_data="trait_toggle_black_humor")
        ],
        [InlineKeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="trait_continue")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 

def edit_options_keyboard():
    buttons = [
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", callback_data="edit_option_name")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ/—á–µ—Ä—Ç—ã", callback_data="edit_option_description")],
        [InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å/–¥–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data="edit_option_avatar")],
        [InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", callback_data="edit_save")]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard 